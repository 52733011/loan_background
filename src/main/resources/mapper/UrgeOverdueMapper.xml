<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiaochong.loan.background.mapper.UrgeOverdueMapper">
  <resultMap id="BaseResultMap" type="com.xiaochong.loan.background.entity.po.UrgeOverdue">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="merch_id" jdbcType="INTEGER" property="merchId" />
    <result column="application_id" jdbcType="INTEGER" property="applicationId" />
    <result column="borrower_id" jdbcType="INTEGER" property="borrowerId" />
    <result column="borrower_name" jdbcType="VARCHAR" property="borrowerName" />
    <result column="borrower_phone" jdbcType="VARCHAR" property="borrowerPhone" />
    <result column="overdue_num" jdbcType="INTEGER" property="overdueNum" />
    <result column="overdue_all_money" jdbcType="DECIMAL" property="overdueAllMoney" />
    <result column="max_overdue_days" jdbcType="INTEGER" property="maxOverdueDays" />
    <result column="last_follow_id" jdbcType="INTEGER" property="lastFollowId" />
    <result column="last_follow_time" jdbcType="TIMESTAMP" property="lastFollowTime" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="create_user" jdbcType="INTEGER" property="createUser" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_user" jdbcType="INTEGER" property="updateUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, merch_id, application_id, borrower_id, borrower_name, borrower_phone, overdue_num, 
    overdue_all_money, max_overdue_days, last_follow_id, last_follow_time, status, create_user, 
    create_time, update_user, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from loan_urge_overdue
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from loan_urge_overdue
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xiaochong.loan.background.entity.po.UrgeOverdue">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into loan_urge_overdue (id, merch_id, application_id, 
      borrower_id, borrower_name, borrower_phone, 
      overdue_num, overdue_all_money, max_overdue_days, 
      last_follow_id, last_follow_time, status, 
      create_user, create_time, update_user, 
      update_time)
    values (#{id,jdbcType=INTEGER}, #{merchId,jdbcType=INTEGER}, #{applicationId,jdbcType=INTEGER}, 
      #{borrowerId,jdbcType=INTEGER}, #{borrowerName,jdbcType=VARCHAR}, #{borrowerPhone,jdbcType=VARCHAR}, 
      #{overdueNum,jdbcType=INTEGER}, #{overdueAllMoney,jdbcType=DECIMAL}, #{maxOverdueDays,jdbcType=INTEGER}, 
      #{lastFollowId,jdbcType=INTEGER}, #{lastFollowTime,jdbcType=TIMESTAMP}, #{status,jdbcType=VARCHAR}, 
      #{createUser,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=INTEGER}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.xiaochong.loan.background.entity.po.UrgeOverdue">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into loan_urge_overdue
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="merchId != null">
        merch_id,
      </if>
      <if test="applicationId != null">
        application_id,
      </if>
      <if test="borrowerId != null">
        borrower_id,
      </if>
      <if test="borrowerName != null">
        borrower_name,
      </if>
      <if test="borrowerPhone != null">
        borrower_phone,
      </if>
      <if test="overdueNum != null">
        overdue_num,
      </if>
      <if test="overdueAllMoney != null">
        overdue_all_money,
      </if>
      <if test="maxOverdueDays != null">
        max_overdue_days,
      </if>
      <if test="lastFollowId != null">
        last_follow_id,
      </if>
      <if test="lastFollowTime != null">
        last_follow_time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="merchId != null">
        #{merchId,jdbcType=INTEGER},
      </if>
      <if test="applicationId != null">
        #{applicationId,jdbcType=INTEGER},
      </if>
      <if test="borrowerId != null">
        #{borrowerId,jdbcType=INTEGER},
      </if>
      <if test="borrowerName != null">
        #{borrowerName,jdbcType=VARCHAR},
      </if>
      <if test="borrowerPhone != null">
        #{borrowerPhone,jdbcType=VARCHAR},
      </if>
      <if test="overdueNum != null">
        #{overdueNum,jdbcType=INTEGER},
      </if>
      <if test="overdueAllMoney != null">
        #{overdueAllMoney,jdbcType=DECIMAL},
      </if>
      <if test="maxOverdueDays != null">
        #{maxOverdueDays,jdbcType=INTEGER},
      </if>
      <if test="lastFollowId != null">
        #{lastFollowId,jdbcType=INTEGER},
      </if>
      <if test="lastFollowTime != null">
        #{lastFollowTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xiaochong.loan.background.entity.po.UrgeOverdue">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update loan_urge_overdue
    <set>
      <if test="merchId != null">
        merch_id = #{merchId,jdbcType=INTEGER},
      </if>
      <if test="applicationId != null">
        application_id = #{applicationId,jdbcType=INTEGER},
      </if>
      <if test="borrowerId != null">
        borrower_id = #{borrowerId,jdbcType=INTEGER},
      </if>
      <if test="borrowerName != null">
        borrower_name = #{borrowerName,jdbcType=VARCHAR},
      </if>
      <if test="borrowerPhone != null">
        borrower_phone = #{borrowerPhone,jdbcType=VARCHAR},
      </if>
      <if test="overdueNum != null">
        overdue_num = #{overdueNum,jdbcType=INTEGER},
      </if>
      <if test="overdueAllMoney != null">
        overdue_all_money = #{overdueAllMoney,jdbcType=DECIMAL},
      </if>
      <if test="maxOverdueDays != null">
        max_overdue_days = #{maxOverdueDays,jdbcType=INTEGER},
      </if>
      <if test="lastFollowId != null">
        last_follow_id = #{lastFollowId,jdbcType=INTEGER},
      </if>
      <if test="lastFollowTime != null">
        last_follow_time = #{lastFollowTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xiaochong.loan.background.entity.po.UrgeOverdue">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update loan_urge_overdue
    set merch_id = #{merchId,jdbcType=INTEGER},
      application_id = #{applicationId,jdbcType=INTEGER},
      borrower_id = #{borrowerId,jdbcType=INTEGER},
      borrower_name = #{borrowerName,jdbcType=VARCHAR},
      borrower_phone = #{borrowerPhone,jdbcType=VARCHAR},
      overdue_num = #{overdueNum,jdbcType=INTEGER},
      overdue_all_money = #{overdueAllMoney,jdbcType=DECIMAL},
      max_overdue_days = #{maxOverdueDays,jdbcType=INTEGER},
      last_follow_id = #{lastFollowId,jdbcType=INTEGER},
      last_follow_time = #{lastFollowTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=VARCHAR},
      create_user = #{createUser,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <select id="selectByUrgeOverDue" parameterType="com.xiaochong.loan.background.entity.po.UrgeOverdue" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from loan_urge_overdue
        where 1=1
        <if test="merchId != null">
           AND merch_id = #{merchId,jdbcType=INTEGER}
        </if>
        <if test="applicationId != null">
            AND application_id = #{applicationId,jdbcType=INTEGER}
        </if>
        <if test="borrowerId != null">
           AND borrower_id = #{borrowerId,jdbcType=INTEGER}
        </if>
        <if test="borrowerName != null">
            AND borrower_name LIKE  CONCAT('%', #{borrowerName}, '%')
        </if>
        <if test="borrowerPhone != null">
            AND  borrower_phone = #{borrowerPhone,jdbcType=VARCHAR}
        </if>
        <if test="overdueNum != null">
            AND  overdue_num = #{overdueNum,jdbcType=INTEGER}
        </if>
        <if test="lastFollowId != null">
            AND last_follow_id = #{lastFollowId,jdbcType=INTEGER}
        </if>
        <if test="status != null">
            AND status = #{status,jdbcType=VARCHAR}
        </if>

    </select>
    <select id="selectByBorrowerId" parameterType="com.xiaochong.loan.background.entity.po.UrgeOverdue" resultMap="BaseResultMap">
        select
        id
        from loan_urge_overdue
        where borrower_id = #{borrowerId,jdbcType=INTEGER}
    </select>
    <select id="selectByApplicationId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        id
        from loan_urge_overdue
        where application_id = #{applicationId,jdbcType=INTEGER}
    </select>
    <select id="selectBorrowerIdsByStatus" resultType="java.lang.Integer">
        select
        borrower_id
        from loan_urge_overdue
        where status = #{status}
    </select>
    <select id="selectApplicationIdsByStatus" resultType="java.lang.Integer">
        select
        application_id
        from loan_urge_overdue
        where status = #{status}
    </select>
    <select id="selectCountByUrgeOverdue" parameterType="com.xiaochong.loan.background.entity.po.UrgeOverdue" resultType="java.util.Map">
        select
        status,COUNT(1) count
        from loan_urge_overdue
        where 1=1
        <if test="merchId != null">
            AND merch_id = #{merchId,jdbcType=INTEGER}
        </if>
        <if test="applicationId != null">
            AND application_id = #{applicationId,jdbcType=INTEGER}
        </if>
        <if test="borrowerId != null">
            AND borrower_id = #{borrowerId,jdbcType=INTEGER}
        </if>
        <if test="borrowerName != null">
            AND borrower_name LIKE  CONCAT('%', #{borrowerName}, '%')
        </if>
        <if test="borrowerPhone != null">
            AND  borrower_phone = #{borrowerPhone,jdbcType=VARCHAR}
        </if>
        <if test="overdueNum != null">
            AND  overdue_num = #{overdueNum,jdbcType=INTEGER}
        </if>
        <if test="lastFollowId != null">
            AND last_follow_id = #{lastFollowId,jdbcType=INTEGER}
        </if>
        <if test="status != null">
            AND status = #{status,jdbcType=VARCHAR}
        </if>
        GROUP BY status
    </select>
    <update id="updateByBorrowerId" parameterType="com.xiaochong.loan.background.entity.po.UrgeOverdue">

        update loan_urge_overdue
        <set>
            <if test="merchId != null">
                 merch_id = #{merchId,jdbcType=INTEGER},
            </if>
            <if test="applicationId != null">
                 application_id = #{applicationId,jdbcType=INTEGER},
            </if>
            <if test="borrowerName != null">
                borrower_name = #{borrowerName,jdbcType=VARCHAR},
            </if>
            <if test="borrowerPhone != null">
                borrower_phone = #{borrowerPhone,jdbcType=VARCHAR},
            </if>
            <if test="overdueNum != null">
                overdue_num = #{overdueNum,jdbcType=INTEGER},
            </if>
            <if test="overdueAllMoney != null">
                overdue_all_money = #{overdueAllMoney,jdbcType=DECIMAL},
            </if>
            <if test="maxOverdueDays != null">
                max_overdue_days = #{maxOverdueDays,jdbcType=INTEGER},
            </if>
            <if test="lastFollowId != null">
                last_follow_id = #{lastFollowId,jdbcType=INTEGER},
            </if>
            <if test="lastFollowTime != null">
                last_follow_time = #{lastFollowTime,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=VARCHAR},
            </if>
            <if test="createUser != null">
                create_user = #{createUser,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateUser != null">
                update_user = #{updateUser,jdbcType=INTEGER},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where borrower_id = #{borrowerId,jdbcType=INTEGER}
    </update>

    <update id="updateByApplicationId" parameterType="com.xiaochong.loan.background.entity.po.UrgeOverdue">

        update loan_urge_overdue
        <set>
            <if test="merchId != null">
                 merch_id = #{merchId,jdbcType=INTEGER},
            </if>
            <if test="borrowerId != null">
               borrower_id = #{borrowerId,jdbcType=INTEGER},
            </if>
            <if test="borrowerName != null">
                borrower_name = #{borrowerName,jdbcType=VARCHAR},
            </if>
            <if test="borrowerPhone != null">
                borrower_phone = #{borrowerPhone,jdbcType=VARCHAR},
            </if>
            <if test="overdueNum != null">
                overdue_num = #{overdueNum,jdbcType=INTEGER},
            </if>
            <if test="overdueAllMoney != null">
                overdue_all_money = #{overdueAllMoney,jdbcType=DECIMAL},
            </if>
            <if test="maxOverdueDays != null">
                max_overdue_days = #{maxOverdueDays,jdbcType=INTEGER},
            </if>
            <if test="lastFollowId != null">
                last_follow_id = #{lastFollowId,jdbcType=INTEGER},
            </if>
            <if test="lastFollowTime != null">
                last_follow_time = #{lastFollowTime,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=VARCHAR},
            </if>
            <if test="createUser != null">
                create_user = #{createUser,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateUser != null">
                update_user = #{updateUser,jdbcType=INTEGER},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where application_id = #{applicationId,jdbcType=INTEGER}
    </update>

    <!--selectCountByUrgeOverdue-->


</mapper>